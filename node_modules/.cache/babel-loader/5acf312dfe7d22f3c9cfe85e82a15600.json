{"ast":null,"code":"var _jsxFileName = \"/Users/user/Documents/GitHub/goit-react-hw-03-image-finder/src/components/Modal/Modal.jsx\";\nimport styles from \"./Modal.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Modal = _ref => {\n  let {\n    articles,\n    handleModalClose\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.Overlay,\n    onClick: handleModalClose,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.Modal,\n      children: articles.map(_ref2 => {\n        let {\n          tags,\n          largeImageURL,\n          id\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          src: largeImageURL,\n          alt: id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 6,\n          columnNumber: 9\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 3\n  }, this);\n};\n\n_c = Modal;\nexport default Modal;\n\nvar _c;\n\n$RefreshReg$(_c, \"Modal\");","map":{"version":3,"sources":["/Users/user/Documents/GitHub/goit-react-hw-03-image-finder/src/components/Modal/Modal.jsx"],"names":["styles","Modal","articles","handleModalClose","Overlay","map","tags","largeImageURL","id"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,oBAAnB;;;AACA,MAAMC,KAAK,GAAG;AAAA,MAAC;AAAEC,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,GAAD;AAAA,sBACZ;AAAK,IAAA,SAAS,EAAEH,MAAM,CAACI,OAAvB;AAAgC,IAAA,OAAO,EAAED,gBAAzC;AAAA,2BACE;AAAK,MAAA,SAAS,EAAEH,MAAM,CAACC,KAAvB;AAAA,gBACGC,QAAQ,CAACG,GAAT,CAAa;AAAA,YAAC;AAAEC,UAAAA,IAAF;AAAQC,UAAAA,aAAR;AAAuBC,UAAAA;AAAvB,SAAD;AAAA,4BACZ;AAAK,UAAA,GAAG,EAAED,aAAV;AAAyB,UAAA,GAAG,EAAEC;AAA9B;AAAA;AAAA;AAAA;AAAA,gBADY;AAAA,OAAb;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADY;AAAA,CAAd;;KAAMP,K;AASN,eAAeA,KAAf","sourcesContent":["import styles from \"./Modal.module.css\";\nconst Modal = ({ articles, handleModalClose }) => (\n  <div className={styles.Overlay} onClick={handleModalClose}>\n    <div className={styles.Modal}>\n      {articles.map(({ tags, largeImageURL, id }) => (\n        <img src={largeImageURL} alt={id}></img>\n      ))}\n    </div>\n  </div>\n);\nexport default Modal;\n"]},"metadata":{},"sourceType":"module"}